{
    "type": "object",
    "properties": {
        "requestBody": {
            "properties": {
                "additionalData": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "This field contains additional data, which may be required for a particular request.",
                    "type": "object"
                },
                "bank": {
                    "description": "A container for bank account data.\n> This field is mandatory if `card` is not provided.",
                    "properties": {
                        "bankAccountNumber": {
                            "description": "The bank account number (without separators).",
                            "type": "string"
                        },
                        "bankCity": {
                            "description": "The bank city.",
                            "type": "string"
                        },
                        "bankLocationId": {
                            "description": "The location id of the bank. The field value is `nil` in most cases.",
                            "type": "string"
                        },
                        "bankName": {
                            "description": "The name of the bank.",
                            "type": "string"
                        },
                        "bic": {
                            "description": "The [Business Identifier Code](https://en.wikipedia.org/wiki/ISO_9362) (BIC) is the SWIFT address assigned to a bank. The field value is `nil` in most cases.",
                            "type": "string"
                        },
                        "countryCode": {
                            "description": "Country code where the bank is located.\n\nA valid value is an ISO two-character country code (e.g. 'NL').",
                            "type": "string"
                        },
                        "iban": {
                            "description": "The [International Bank Account Number](https://en.wikipedia.org/wiki/International_Bank_Account_Number) (IBAN).",
                            "type": "string"
                        },
                        "ownerName": {
                            "description": "The name of the bank account holder.\nIf you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:\n* χ12 is converted to ch12.\n* üA is converted to euA.\n* Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.\nAfter replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:\n* John17 - allowed.\n* J17 - allowed.\n* 171 - not allowed.\n* John-7 - allowed.\n> If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.",
                            "type": "string"
                        },
                        "taxId": {
                            "description": "The bank account holder's tax ID.",
                            "type": "string"
                        }
                    }
                },
                "billingAddress": {
                    "description": "The billing address.",
                    "properties": {
                        "city": {
                            "description": "The name of the city.\n>Required if either houseNumberOrName, street, postalCode, or stateOrProvince are provided.",
                            "type": "string"
                        },
                        "country": {
                            "description": "The two-character country code of the address\n>The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').",
                            "type": "string"
                        },
                        "houseNumberOrName": {
                            "description": "The number or name of the house.",
                            "type": "string"
                        },
                        "postalCode": {
                            "description": "The postal code.\n>A maximum of five (5) digits for an address in the USA, or a maximum of ten (10) characters for an address in all other countries.\n>Required if either houseNumberOrName, street, city, or stateOrProvince are provided.",
                            "type": "string"
                        },
                        "stateOrProvince": {
                            "description": "The abbreviation of the state or province.\n>Two (2) characters for an address in the USA or Canada, or a maximum of three (3) characters for an address in all other countries.\n>Required for an address in the USA or Canada if either houseNumberOrName, street, city, or postalCode are provided.",
                            "type": "string"
                        },
                        "street": {
                            "description": "The name of the street.\n>The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.\n>Required if either houseNumberOrName, city, postalCode, or stateOrProvince are provided.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "country"
                    ]
                },
                "card": {
                    "description": "A container for card data.\n> This field is mandatory if `bank` is not provided.",
                    "properties": {
                        "cvc": {
                            "description": "The [card verification code](https://docs.adyen.com/developers/payment-glossary#cardsecuritycodecvccvvcid) (1-20 characters). Depending on the card brand, it is known also as:\n* CVV2/CVC2 – length: 3 digits\n* CID – length: 4 digits\n> If you are using [Client-Side Encryption](https://docs.adyen.com/developers/ecommerce-integration), the CVC code is present in the encrypted data. You must never post the card details to the server.\n> This field must be always present in a [one-click payment request](https://docs.adyen.com/developers/features/recurring-payments).\n> When this value is returned in a response, it is always empty because it is not stored.",
                            "maxLength": 20,
                            "minLength": 1,
                            "type": "string"
                        },
                        "expiryMonth": {
                            "description": "The card expiry month.\nFormat: 2 digits, zero-padded for single digits. For example:\n* 03 = March\n* 11 = November",
                            "maxLength": 2,
                            "minLength": 1,
                            "type": "string"
                        },
                        "expiryYear": {
                            "description": "The card expiry year.\nFormat: 4 digits. For example: 2018",
                            "maxLength": 4,
                            "minLength": 4,
                            "type": "string"
                        },
                        "holderName": {
                            "description": "The name of the cardholder, as printed on the card.",
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        },
                        "issueNumber": {
                            "description": "The issue number of the card (for some UK debit cards only).",
                            "maxLength": 2,
                            "minLength": 1,
                            "type": "string"
                        },
                        "number": {
                            "description": "The card number (4-19 characters). Do not use any separators.\nWhen this value is returned in a response, only the last 4 digits of the card number are returned.",
                            "maxLength": 19,
                            "minLength": 4,
                            "type": "string"
                        },
                        "startMonth": {
                            "description": "The month component of the start date (for some UK debit cards only).",
                            "maxLength": 2,
                            "minLength": 1,
                            "type": "string"
                        },
                        "startYear": {
                            "description": "The year component of the start date (for some UK debit cards only).",
                            "maxLength": 4,
                            "minLength": 4,
                            "type": "string"
                        }
                    },
                    "required": [
                        "number",
                        "expiryMonth",
                        "expiryYear",
                        "holderName"
                    ]
                },
                "dateOfBirth": {
                    "description": "The date of birth.\nFormat: [ISO-8601](https://www.w3.org/TR/NOTE-datetime); example: YYYY-MM-DD\nFor Paysafecard it must be the same as used when registering the Paysafecard account.\n> This field is mandatory for natural persons.",
                    "format": "date-time",
                    "type": "string"
                },
                "entityType": {
                    "description": "The type of the entity the payout is processed for.",
                    "enum": [
                        "NaturalPerson",
                        "Company"
                    ],
                    "type": "string"
                },
                "fraudOffset": {
                    "description": "An integer value that is added to the normal fraud score. The value can be either positive or negative.",
                    "format": "int32",
                    "type": "integer"
                },
                "merchantAccount": {
                    "description": "The merchant account identifier, with which you want to process the transaction.",
                    "type": "string"
                },
                "nationality": {
                    "description": "The shopper's nationality.\n\nA valid value is an ISO 2-character country code (e.g. 'NL').",
                    "maxLength": 2,
                    "type": "string"
                },
                "recurring": {
                    "description": "A container for the type of recurring contract to be retrieved.\n\nThe recurring.contract must be set to `PAYOUT`",
                    "properties": {
                        "contract": {
                            "description": "The type of recurring contract to be used.\nPossible values:\n* `ONECLICK` – Payment details can be used to initiate a one-click payment, where the shopper enters the [card security code (CVC/CVV)](https://docs.adyen.com/developers/payment-glossary#cardsecuritycodecvccvvcid).\n* `RECURRING` – Payment details can be used without the card security code to initiate [card-not-present transactions](https://docs.adyen.com/developers/payment-glossary#cardnotpresentcnp).\n* `ONECLICK,RECURRING` – Payment details can be used regardless of whether the shopper is on your site or not.\n* `PAYOUT` – Payment details can be used to [make a payout](https://docs.adyen.com/developers/features/third-party-payouts).",
                            "enum": [
                                "ONECLICK",
                                "RECURRING",
                                "PAYOUT"
                            ],
                            "type": "string"
                        },
                        "recurringDetailName": {
                            "description": "A descriptive name for this detail.",
                            "type": "string"
                        },
                        "tokenService": {
                            "description": "The name of the token service.",
                            "enum": [
                                "VISATOKENSERVICE",
                                "MCTOKENSERVICE"
                            ],
                            "type": "string"
                        }
                    }
                },
                "selectedBrand": {
                    "description": "The name of the brand to make a payout to.\n\nFor Paysafecard it must be set to `paysafecard`.",
                    "type": "string"
                },
                "shopperEmail": {
                    "description": "The shopper's email address.",
                    "type": "string"
                },
                "shopperName": {
                    "description": "The shopper's name.\n\nWhen the `entityType` is `Company`, the `shopperName.lastName` must contain the company name.",
                    "properties": {
                        "firstName": {
                            "description": "The first name.",
                            "type": "string"
                        },
                        "gender": {
                            "description": "The gender.\n>The following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.",
                            "enum": [
                                "MALE",
                                "FEMALE",
                                "UNKNOWN"
                            ],
                            "maxLength": 1,
                            "minLength": 1,
                            "type": "string"
                        },
                        "infix": {
                            "description": "The name's infix, if applicable.\n>A maximum length of twenty (20) characters is imposed.",
                            "type": "string"
                        },
                        "lastName": {
                            "description": "The last name.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "firstName",
                        "lastName",
                        "gender"
                    ]
                },
                "shopperReference": {
                    "description": "The shopper's reference for the payment transaction.",
                    "type": "string"
                },
                "socialSecurityNumber": {
                    "description": "The shopper's social security number.",
                    "type": "string"
                }
            },
            "required": [
                "merchantAccount",
                "shopperEmail",
                "shopperReference",
                "recurring",
                "dateOfBirth",
                "nationality",
                "entityType"
            ],
            "type": "object"
        }
    }
}